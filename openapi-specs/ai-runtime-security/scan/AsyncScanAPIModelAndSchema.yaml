components:
  schemas:
    ScanRequest:
      type: object
      properties:
        tr_id:
          type: integer
          format: int32
        profile_id:
          type: string
          format: uuid
        metadata:
          $ref: '#/components/schemas/Metadata'
        contents:
          type: array
          items:
            type: object
            properties:
              prompt:
                type: string
              response:
                type: string
      required:
        - profile_id
        - metadata
        - contents
 
    Metadata:
      type: object
      properties:
        app_name:
          type: string
        app_user:
          type: string
        ai_model:
          type: string
        csp_vendor:
          type: string
        csp_region:
          type: string
 
    ScanResponse:
      type: object
      properties:
        report_id:
          type: string
        scan_id:
          type: string
          format: uuid
        profile_id:
          type: string
          format: uuid
        category:
          type: string
        action:
          type: string
        prompt_detected:
          $ref: '#/components/schemas/PromptDetected'
        response_detected:
          $ref: '#/components/schemas/response_detected'
        created_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
        ts:
          type: integer
          format: uiu
      required:
        - report_id
        - scan_id
        - category
        - action
 
    PromptDetected:
      type: object
      properties:
        url_cats:
          type: boolean
        dlp:
          type: boolean
        injection:
          type: boolean
 
    response_detected:
      type: object
      properties:
        url_cats:
          type: boolean
        dlp:
          type: boolean
         
    ScanIdResults:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          status:
            type: string
          scan_id:
            type: string
          result:
            $ref: '#/components/schemas/ScanResponse'
 
    AsyncScanRequest:
      type: array
      items:
        $ref: '#/components/schemas/AsyncScanObject'
 
    AsyncScanObject:
      type: object
      properties:
        req_id:
          type: integer
        scan_req:
          $ref: '#/components/schemas/ScanRequest'
      required:
        - req_id
        - scan_req
 
    AsyncScanResponse:
      type: object
      properties:
        received:
          type: string
          format: date-time
        scan_id:
          type: string
      required:
        - received
        - scan_id
 
    Error:
      type: object
      properties:
        status_code:
          type: integer
          format: int32
        message:
          type: string
      required:
        - code
        - message
info:
  title: AISec API service
  description: OpenAPI Specification for the AI Runtime Security API service
  version: 0.0.0
openapi: 3.0.3 
paths:
  /v1/scan/async/request:
    post:
      summary: Scan asynchronously for prompt/model-response for any threats
      description: Post a scan request that returns asynchronous scan response
      security: []
      operationId: ScanAsyncRequest
      tags:
        - AsyncScanAPIModelAndSchema
      requestBody:
        description: A list of scan request objects
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AsyncScanRequest'
      responses:
        '200':
          description: successfully scanned request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncScanResponse'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/scan/results:
    get:
      summary: Get Scan Results for a given Scan ID
      description: Get the Scan results for a Scan ID
      security: [ ]
      operationId: GetScanResultsByScanId
      tags:
        - AsyncScanAPIModelAndSchema
      parameters:
        - name: scan_id
          in: query
          description: Scan Id for Results
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully returned records for Scan Results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanIdResults'
        default:
          description: error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
servers:
  - url: 'http://localhost:39090'
    description: 'Local'
tags:
  - name: AsyncScanAPIModelAndSchema
    description: scan request description
