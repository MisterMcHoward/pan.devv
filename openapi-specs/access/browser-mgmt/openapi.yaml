openapi: 3.0.0
info:
  title: Prisma Access Browser Management Console Public API
  version: 1.0.0
paths:
  /seb-api/v1/users:
    get:
      summary: Returns a list of users
      tags:
        - Users
      parameters:
        - name: limit
          in: query
          description: Number of users to return
          required: false
          schema:
            type: integer
            format: int32
        - name: includeDeleted
          in: query
          description: Include deleted users
          required: false
          schema:
            type: boolean
        - name: user.name
          in: query
          description: Filter by user name
          required: false
          schema:
            type: string
        - name: user.email
          in: query
          description: Filter by user email
          required: false
          schema:
            type: string
        - name: user.first_seen_gte
          in: query
          description: Filter by first seen time or after
          required: false
          schema:
            type: string
            format: date-time
        - name: user.last_seen_lte
          in: query
          description: Filter by last seen time or before
          required: false
          schema:
            type: string
            format: date-time
        - name: cursor
          in: query
          description: An optional opaque string that defines from where to start listing
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: The field to sort by
          required: false
          schema:
            type: string
            enum:
              - user.name
              - user.email
              - user.first_seen
              - user.last_seen
        - name: order
          in: query
          description: The sort order
          required: false
          schema:
            $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: A list of users with pagination info
          content:
            application/json:
              schema:
                type: object
                properties:
                  pageInfo:
                    $ref: '#/components/schemas/PageInfo'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /seb-api/v1/users/{id}:
    get:
      tags:
        - Users
      summary: Returns a user by ID
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
  /seb-api/v1/devices:
    get:
      tags:
        - Devices
      summary: Returns a list of devices
      parameters:
        - name: limit
          in: query
          description: Number of devices to return
          required: false
          schema:
            type: integer
            format: int32
        - name: device.hostname
          in: query
          description: Filter by hostname
          required: false
          schema:
            type: string
        - name: user.name
          in: query
          description: Filter by user name
          required: false
          schema:
            type: string
        - name: device.os_type
          in: query
          description: Filter by OS type
          required: false
          schema:
            type: string
        - name: device.first_seen_gte
          in: query
          description: Filter by first seen time or after
          required: false
          schema:
            type: string
            format: date-time
        - name: device.last_seen_lte
          in: query
          description: Filter by last seen time or before
          required: false
          schema:
            type: string
            format: date-time
        - name: device.type
          in: query
          description: Filter by device type
          required: false
          schema:
            type: string
        - name: device.firewall_status
          in: query
          description: Filter by firewall status
          required: false
          schema:
            type: string
        - name: device.screen_lock_status
          in: query
          description: Filter by screen lock status
          required: false
          schema:
            type: string
        - name: device.disk_encryption_status
          in: query
          description: Filter by disk encryption status
          required: false
          schema:
            type: string
        - name: cursor
          in: query
          description: An optional opaque string that defines from where to start listing
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: The field to sort by
          required: false
          schema:
            type: string
            enum:
              - device.hostname
              - device.os_type
              - device.browser_version
              - device.first_seen
              - device.last_seen
              - user.name
        - name: order
          in: query
          description: The sort order
          required: false
          schema:
            $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: A list of devices with pagination info
          content:
            application/json:
              schema:
                type: object
                properties:
                  pageInfo:
                    $ref: '#/components/schemas/PageInfo'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Device'
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /seb-api/v1/devices/{id}:
    get:
      tags:
        - Devices
      summary: Returns a device by ID
      parameters:
        - name: id
          in: path
          description: Device ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'                
        '404':
          description: Device not found
  /seb-api/v1/user-groups:
    get:
      tags:
        - UserGroups
      summary: Returns a list of user groups
      parameters:
        - name: limit
          in: query
          description: Number of user requests to return
          required: false
          schema:
            type: integer
            format: int32
        - name: cursor
          in: query
          description: An optional opaque string that defines from where to start listing
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A list of user groups
          content:
            application/json:
              schema:
                type: object
                properties:
                  pageInfo:
                    $ref: '#/components/schemas/PageInfo'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserGroup'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorResponse:
                    $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
        '500':
          description: Internal server error
    post:
      tags:
        - UserGroups
      summary: Creates a new user group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the user group'
                userIds:
                  type: array
                  items:
                    type: string
                  description: 'List of user IDs'
              required:
                - name
                - userIds
      responses:
        '201':
          description: User group created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  userGroupId:
                    type: string
                    description: 'The ID of the newly created user group'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorResponse:
                    $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /seb-api/v1/user-groups/{id}:
    get:
      tags:
        - UserGroups
      summary: Returns a single user group by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user group to retrieve
          schema:
            type: string
      responses:
        '200':
          description: A single user group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorResponse:
                    $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
        '404':
          description: User group not found
        '500':
          description: Internal server error
    put:
      tags:
        - UserGroups
      summary: Updates a user group
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user group to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: array
                  items:
                    type: object
                    properties:
                      userId:
                        type: string
                        description: 'User ID'
                      action:
                        type: string
                        enum:
                          - add
                          - remove
                        description: 'Action to perform (add or remove the user)'
                    required:
                      - userId
                      - action
                  description: 'List of user updates'
              required:
                - users
      responses:
        '200':
          description: User group updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  userGroupId:
                    type: string
                    description: 'The ID of the updated user group'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorResponse:
                    $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
        '404':
          description: User group not found
        '500':
          description: Internal server error
    delete:
      tags:
        - UserGroups
      summary: Deletes a user group
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user group to delete
          schema:
            type: string
      responses:
        '200':
          description: User group deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  userGroupId:
                    type: string
                    description: 'The ID of the deleted user group'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorResponse:
                    $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
        '404':
          description: User group not found
        '500':
          description: Internal server error
  /seb-api/v1/applications:
    get:
      tags:
        - Applications
      summary: Returns a list of applications
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: Optional name string to search in applications
          required: false
        - in: query
          name: url
          schema:
            type: string
          description: Optional url string to search in applications
          required: false
      responses:
        '200':
          description: A list of all application objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApplicationResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorResponse:
                    $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /seb-api/v1/applications/plugins:
    get:
      tags:
        - Applications
      summary: Returns a list of application plugins
      responses:
        '200':
          description: A list of all application plugin objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PluginResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorResponse:
                    $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /seb-api/v1/applications/{id}/plugins:
    get:
      tags:
        - Applications
      summary: Returns the plugin associated with the application ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the application to retrieve the plugin for
          schema:
            type: string
      responses:
        '200':
          description: A single plugin associated with the application ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorResponse:
                    $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
        '404':
          description: Plugin not found
        '500':
          description: Internal server error
    post:
      tags:
        - Applications
      summary: Creates a new plugin associated with the application ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the application to create the plugin for
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plugin:
                  $ref: '#/components/schemas/Plugin'
              required:
                - plugin
      responses:
        '201':
          description: Plugin created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  pluginId:
                    type: string
                    description: 'The ID of the newly created plugin'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorResponse:
                    $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
        '409':
          description: Conflict
        '500':
          description: Internal server error
    put:
      tags:
        - Applications
      summary: Updates the plugin associated with the application ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the application to update the plugin for
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plugin:
                  $ref: '#/components/schemas/Plugin'
              required:
                - plugin
      responses:
        '200':
          description: Plugin updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  pluginId:
                    type: string
                    description: 'The ID of the updated plugin'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorResponse:
                    $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
        '404':
          description: Plugin not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Applications
      summary: Deletes the plugin associated with the application ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the application associated with the plugin to delete
          schema:
            type: string
      responses:
        '200':
          description: Plugin deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  pluginId:
                    type: string
                    description: 'The ID of the deleted plugin'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorResponse:
                    $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
        '404':
          description: User group not found
        '500':
          description: Internal server error
  /seb-api/v1/user-requests:
    get:
      tags:
        - UserRequests
      summary: Returns a list of user requests
      parameters:
        - name: limit
          in: query
          description: Number of user requests to return
          required: false
          schema:
            type: integer
            format: int32
        - name: request.type
          in: query
          description: Filter by request type
          required: false
          schema:
              type: string
              enum:
                - WebAccess
                - AppLogin
        - name: request.user_id
          in: query
          description: Filter by request user id
          required: false
          schema:
              type: string
        - name: request.device_id
          in: query
          description: Filter by request device id
          required: false
          schema:
              type: string
        - name: request.rule_id
          in: query
          description: Filter by request rule id
          required: false
          schema:
              type: string
        - name: request.url
          in: query
          description: Filter by request url
          required: false
          schema:
              type: string
        - name: request.responded_by
          in: query
          description: Filter by response by user id
          required: false
          schema:
            type: string
        - name: request.status
          in: query
          description: Filter by request status
          required: false
          schema:
              type: string
              enum:
                - Approved
                - Declined
                - Pending
                - Revoked
        - name: cursor
          in: query
          description: An optional opaque string that defines from where to start listing
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: The field to sort by
          required: false
          schema:
            type: string
            enum:
              - request.created_at
              - request.type
              - request.status
              - request.response_time
              - request.url
        - name: order
          in: query
          description: The sort order
          required: false
          schema:
            $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: A list of requests with pagination info
          content:
            application/json:
              schema:
                type: object
                properties:
                  pageInfo:
                    $ref: '#/components/schemas/PageInfo'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserRequest'
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /seb-api/v1/user-requests/{id}:
    get:
      tags:
        - UserRequests
      summary: Returns a request by ID
      parameters:
        - name: id
          in: path
          description: Request ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRequest'
        '404':
          description: Request not found
  /seb-api/v1/user-requests/{id}/action:
    post:
      tags:
        - UserRequests
      summary: Act upon a user request
      parameters:
        - name: id
          in: path
          description: Request ID
          required: true
          schema:
            type: string      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestAction'
      responses:
        '200':
          description: Action performed on request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRequest'
        '404':
          description: Request not found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /seb-api/v1/user-requests/{id}/revoke:
    post:
      tags:
        - UserRequests
      summary: Revoke already approved request
      parameters:
        - name: id
          in: path
          description: Request ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeRequestAction'
      responses:
        '200':
          description: Action performed on request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRequest'
        '404':
          description: Request not found
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
        '403':
          description: Forbidden
        '500':
          description: Internal server error
components:
  #### securitySchemes ####
  schemas:
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        error:
          type: string
        message:
          type: string
    Order:
      type: string
      description: The sort order
      enum:
        - asc
        - desc
    EPP:
      type: object
      required:
        - name
        - version
        - state
      properties:
        name:
          type: string
        version:
          type: string
        state:
          type: string
    DeviceEPP:
      type: object
      required:
        - products
        - enabled
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/EPP'
        enabled:
          type: boolean
    DevicePasswordPosturePolicy:
      type: object
      required:
        - complexityReq
        - maxPasswordAge
        - minPasswordLength
      properties:
        complexityReq:
          type: boolean
        maxPasswordAge:
          type: integer
        minPasswordLength:
          type: integer
    DevicePasswordPosture:
      type: object
      required:
        - enabled
        - products
      properties:
        enabled:
          type: boolean
        passwordPolicy:
          $ref: '#/components/schemas/DevicePasswordPosturePolicy'
    CrowdstrikeZTAPosture:
      type: object
      required:
        - score
        - sensorScore
        - osScore
        - CID
      properties:
        score:
          type: integer
        sensorScore:
          type: integer
        osScore:
          type: integer
        CID:
          type: string
    SystemIntegrityPostureServices:
      type: object
      properties:
        driversSigningEnforcement:
          type: boolean
        kernelDebugger:
          type: boolean
        secureBoot:
          type: boolean
        SIP:
          type: boolean
        gatekeeper:
          type: boolean
    SystemIntegrityPosture:
      type: object
      required:
        - status
        - services
      properties:
        status:
          type: string
          enum:
            - pass
            - fail
            - unknown
        services:
          $ref: '#/components/schemas/SystemIntegrityPostureServices'

    DeviceManagementSystem:
      type: object
      properties:
        system:
          type: string
          enum:
            - ad
            - azureAd
            - intune
            - jamf
        details:
          type: string
    DeviceManagement:
      type: object
      required:
        - status
        - systems
      properties:
        status:
          type: string
          enum:
            - managed
            - unmanaged
        systems:
          type: array
          description: 'Device Management'
          items:
            $ref: '#/components/schemas/DeviceManagementSystem'

    User:
      type: object
      properties:
        id:
          type: string
          format: string
          description: 'Unique identifier'
        externalId:
          type: string
          format: string
          description: 'External identifier'
        email:
          type: string
          description: 'Email'
        lastSeen:
          type: string
          format: date-time
          description: 'Last seen time'
        firstSeen:
          type: string
          format: date-time
          description: 'First seen time'
        name:
          type: string
          description: 'Name'
        profilePictureURL:
          type: string
          description: 'Profile Picture URL'
        deletedTime:
          type: string
          format: date-time
          description: 'Deleted Time'
        provider:
          type: string
          description: 'Provider'
          enum:
            - saml
            - local
            - oidc
        deviceIds:
          type: array
          description: 'Device IDs'
          items:
            type: string
        userGroups:
          type: array
          description: 'User Groups'
          items:
            $ref: '#/components/schemas/UserGroup'
      required:
        - id
        - email
        - lastSeen
        - firstSeen
        - name
        - profilePictureURL
        - deletedTime
        - provider
        - externalId
    UserGroup:
      type: object
      properties:
        id:
          type: string
          description: 'Unique identifier'
        name:
          type: string
          description: 'Name'
        lastUpdated:
          type: string
          format: date-time
          description: 'Last updated'
        createdAt:
          type: string
          format: date-time
          description: 'Created at'
        provider:
          type: string
          enum:
            - sso
            - local
          description: 'Provider'
      required:
        - id
        - name

    Device:
      type: object
      properties:
        id:
          type: string
          format: string
          description: 'Unique identifier'
        externalId:
          type: string
          format: string
          description: 'External identifier'
        firstSeen:
          type: string
          format: date-time
          description: 'First seen time'
        lastSeen:
          type: string
          format: date-time
          description: 'Last seen time'
        osType:
          type: string
          description: 'Operating System type'
          enum:
            - windows
            - macOS
            - linux
            - ios
            - android
            - unknown
        osVersion:
          type: string
          description: 'OS Version'
        arch:
          type: string
          description: 'Architecture'
        nativeArch:
          type: string
          description: 'Native Architecture'
        hostname:
          type: string
          description: 'Hostname'
        model:
          type: string
          description: 'Device Model'
        serialNumber:
          type: string
          description: 'Serial Number'
        macAddresses:
          type: array
          items:
            type: string
          description: 'MAC Addresses'
        screenLockStatus:
          type: string
          description: 'Screen Lock Status'
          enum:
            - ScreenLockStatusUnknown
            - ScreenLockStatusDisabled
            - ScreenLockStatusEnabled
        diskEncryptionStatus:
          type: string
          description: 'Disk Encryption Status'
          enum:
            - DiskEncryptionStatusUnknown
            - DiskEncryptionStatusDisabled
            - DiskEncryptionStatusEnabled
        firewallStatus:
          type: string
          description: 'Firewall Status'
          enum:
            - FireWallStatusUnknown
            - FireWallStatusDisabled
            - FireWallStatusEnabled
        userAgent:
          type: string
          description: 'User Agent'
        ip:
          type: string
          description: 'IP Address'
          nullable: true
        talonExtensionVersion:
          type: string
          description: 'Talon Extension Version'
        browserVersion:
          type: string
          description: 'Browser Version'
        deviceType:
          type: string
          description: 'Device Type'
          enum:
            - unknown
            - desktop
            - laptop
            - vm
            - smartphone
            - tablet
            - chromebook
        deviceEPP:
          $ref: '#/components/schemas/DeviceEPP'
        devicePassword:
          $ref: '#/components/schemas/DevicePasswordPosture'
        crowdstrikeZTA:
          $ref: '#/components/schemas/CrowdstrikeZTAPosture'
        systemIntegrity:
          $ref: '#/components/schemas/SystemIntegrityPosture'
        deviceManagement:
          $ref: '#/components/schemas/DeviceManagement'
        user:
          $ref: '#/components/schemas/User'
      required:
        - id
        - firstSeen
        - lastSeen
        - osType
        - arch
        - nativeArch
        - hostname
        - model
        - serialNumber
        - macAddresses
        - screenLockStatus
        - diskEncryptionStatus
        - firewallStatus
        - userAgent
        - talonExtensionVersion
        - browserVersion
        - channel
        - deviceType
        - osVersion
        - externalId

    PageInfo:
      type: object
      properties:
        hasNextPage:
          type: boolean
          description: 'When paginating forwards, are there more items?'
        cursor:
          type: string
          nullable: true
          description: 'When paginating forwards, the cursor to continue.'
      required:
        - hasNextPage

    ApplicationResponse:
      type: object
      properties:
        id:
          type: string
          format: string
          description: 'Unique identifier'
        appId:
          type: integer
        name:
          type: string
          format: string
          description: 'Name of the application'
        urls:
          type: array
          description: 'Url Pattenrs for the application'
          items:
            type: string
        category:
          type: string
          format: string
        reputation:
          type: integer
        resetPasswordUrl:
          type: string
          format: string
        type:
          type: string
          format: string
        primaryUrl:
          type: string
          format: string
        routeToPrisma:
          type: boolean
      required:
        - id
        - createTime
        - updateTime
        - name
        - urls

    PluginResponse:
      type: object
      properties:
        id:
          type: string
          format: string
          description: 'Unique identifier'
        createTime:
          type: string
          format: date-time
          description: 'Creation time of the plugin'
        updateTime:
          type: string
          format: date-time
          description: 'Last update time of the plugin'
        plugin:
          $ref: '#/components/schemas/Plugin'
        applicationId:
          type: string
          description: 'Application ID of the application the plugin is associated to'
      required:
        - id
        - createTime
        - updateTime
        - plugin
        - applicationId

    Plugin:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/PluginEvent'
        links:
          type: array
          items:
            $ref: '#/components/schemas/PluginLink'
        elements:
          type: array
          items:
            $ref: '#/components/schemas/PluginElement'

    PluginEvent:
      type: object
      properties:
        eventType:
          type: string
          enum:
            - loginFail
            - loginAttempt
            - passwordReset
            - userRegistration
        requestUrl:
          type: string
        triggerUrl:
          type: string
        triggerOnSuccess:
          type: boolean
        triggerOnFail:
          type: boolean
        method:
          type: string
          enum:
            - GET
            - POST
            - PUT
            - PATCH
            - DELETE
        statusCode:
          type: integer
        minContentLength:
          type: integer
        maxContentLength:
          type: integer
        headers:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              content:
                type: string
            required:
              - name
              - content
      required:
        - eventType

    PluginLink:
      type: object
      properties:
        urlPattern:
          type: string
        resetPasswordUrl:
          type: string
        loginPageUrl:
          type: string

    PluginElement:
      type: object
      properties:
        elementType:
          type: string
          enum:
            - excludeAccountShield
            - includeAccountShield
        urlPattern:
          type: string
        selectors:
          type: array
          items:
            type: string
      required:
        - elementType
        - selectors
    UserRequest:
      type: object
      properties:
        id:
          type: string
          format: string
          description: 'Unique identifier'
        userId:
          type: string
          format: string
          description: 'Request unique identifier'
        type:
          type: string
          format: string
          description: 'Request type'
        status:
          type: string
          format: string
          description: 'Request status'
        url:
          type: string
          format: string
          description: 'bypassing url'
        reason:
          type: string
          format: string
          description: 'reason for request'
        deviceId:
          type: string
          format: string
          description: 'Device unique identifier'
        ruleId:
          type: string
          format: string
          description: 'Blocking rule unique identifier'
        adminComment:
          type: string
          format: string
          description: 'Admin comment'
        createdAt:
          type: string
          format: date-time
          description: 'Request created at'
        userAcceptedAt:
          type: string
          format: date-time
          description: 'User accepted response at'
        responseTime:
          type: string
          format: date-time
          description: 'Admin response time'
        adminBypassTimeframe:
          type: integer
          format: string
          description: 'The timeframe for which the approval is valid'
        respondedBy:
          type: string
          format: string
          description: 'Response by'
        revokedBy:
          type: string
          format: string
          description: 'Revoked by'
        revokedAt:
          type: string
          format: date-time
          description: 'Admin revoke time'
        revokerComment:
          type: string
          format: string
          description: 'Revoke comment'
      required:
        - id
        - userId
        - status
        - type
        - url
        - reason
        - ruleId
        - createdAt
        - deviceId
    RequestError:
      type: object
      properties:
        error_message:
          type: string
    RequestAction:
      type: object
      properties:
        action:
          type: string
          enum: 
            - approve
            - decline
          description: Action to perform on the request
        adminComment:
          type: string
          format: string
          description: Admin comment on the action
        adminBypassTimeframe:
          type: string
          enum:
            - Once
            - 10m
            - 1h
            - 4h
            - 9h
            - 12h
            - 24h
            - 3d
            - 7d
            - 14d
            - 30d
            - 60d
            - 90d
          description: The timeframe for which the approval is valid
      required:
        - action
    RevokeRequestAction:
      type: object
      properties:
        revokerComment:
          type: string
          format: string
          description: Admin revoke comment
      required:
        - action
