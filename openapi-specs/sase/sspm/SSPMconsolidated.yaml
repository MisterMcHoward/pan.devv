components:
  schemas:
    Application:
      properties:
        app_id:
          type: string
        app_settings:
          additionalProperties:
            type: string
          type: object
        changed_at:
          format: date-time
          type: string
        changed_by:
          type: string
        configs:
          additionalProperties:
            type: string
          type: object
        created_at:
          format: date-time
          type: string
        created_by:
          type: string
        fawkes_url:
          type: string
        features_metadata:
          additionalProperties:
            additionalProperties:
              type: string
            type: object
          type: object
        features_state:
          additionalProperties:
            $ref: '#/components/schemas/FeatureState'
          type: object
        health_status:
          enum:
          - Up
          - Unhealthy
          - Down
          - Unknown
          - Scanning
          type: string
        instance_label:
          enum:
          - Default
          - Production
          - Sandbox
          - Internal
          - QA
          - Dev
          type: string
        last_scanned_at:
          format: date-time
          type: string
        last_validated_at:
          format: date-time
          type: string
        missing_configs:
          items:
            type: string
          type: array
        name:
          type: string
        owner:
          $ref: '#/components/schemas/User'
        remediation_enabled:
          type: boolean
        scan_interval_minutes:
          format: int32
          type: integer
        status:
          enum:
          - Registered
          - Active
          - Disabled
          type: string
        tenant:
          type: string
        tsg_id:
          type: string
        type:
          type: string
      type: object
    ApplicationAuthInfo:
      properties:
        fields:
          items:
            $ref: '#/components/schemas/AuthFormElement'
          type: array
        sso_fields:
          items:
            $ref: '#/components/schemas/SsoFields'
          type: array
        strategy:
          enum:
          - REDIRECT_URL
          - PROVIDED_CREDENTIALS
          type: string
      type: object
    ApplicationPage:
      properties:
        items:
          items:
            type: object
          type: array
        limit:
          format: int32
          type: integer
        next_path:
          type: string
        prev_path:
          type: string
        total:
          format: int64
          type: integer
      type: object
    AuthFormElement:
      discriminator:
        propertyName: kind
      properties:
        kind:
          enum:
          - FIELD
          - DOC
          type: string
      type: object
    CatalogApplication:
      properties:
        display_name:
          type: string
        enabled:
          type: boolean
        features:
          items:
            enum:
            - SCAN
            - REMEDIATE
            - RISKY_ACCOUNTS
            - THIRD_PARTY_APPS
            - THIRD_PARTY_APPS_USER_REVOKE
            - IDENTITY
            type: string
          type: array
          uniqueItems: true
        features_metadata:
          additionalProperties:
            additionalProperties:
              type: string
            type: object
          type: object
        lambda:
          type: boolean
        name:
          type: string
      type: object
    CatalogConfig:
      properties:
        __metadata:
          additionalProperties:
            type: object
          properties:
            empty:
              type: boolean
          type: object
        category:
          type: string
        common_control:
          type: string
        console_url:
          type: string
        description:
          type: string
        description_url:
          type: string
        enabled:
          type: boolean
        id:
          type: string
        name:
          type: string
        native_category:
          type: string
        native_name:
          type: string
        operator:
          $ref: '#/components/schemas/CatalogConfigOperator'
        optional:
          type: boolean
        remediation:
          $ref: '#/components/schemas/RemediationConfig'
        remediation_steps:
          type: string
        severity:
          type: string
        value:
          $ref: '#/components/schemas/ConfigValue'
      type: object
    CatalogConfigOperator:
      discriminator:
        propertyName: operator
      properties:
        displayValue:
          type: string
        operator:
          enum:
          - equal
          - not_equal
          - substring
          - not_substring
          - greater
          - greater_or_equal
          - less
          - less_or_equal
          - one_of
          - not_one_of
          - in_range
          - not_in_range
          type: string
        valueType:
          enum:
          - int
          - double
          - string
          - bool
          type: string
      type: object
    CommonControlProfiles:
      properties:
        id:
          type: string
        name:
          type: string
        profiles:
          items:
            $ref: '#/components/schemas/ComplianceProfile'
          type: array
      type: object
    ComplianceCategory:
      properties:
        controls:
          items:
            $ref: '#/components/schemas/ComplianceControl'
          type: array
        name:
          type: string
      type: object
    ComplianceControl:
      properties:
        description:
          type: string
        id:
          type: string
      type: object
    ComplianceProfile:
      properties:
        categories:
          items:
            $ref: '#/components/schemas/ComplianceCategory'
          type: array
        id:
          type: string
        name:
          type: string
      type: object
    Config:
      properties:
        app_id:
          type: string
        category:
          type: string
        common_control_id:
          type: string
        config_id:
          type: string
        console_url:
          type: string
        current_value:
          type: string
        description:
          type: string
        descriptionUrl:
          type: string
        id:
          type: string
        locked:
          type: boolean
        locked_value:
          type: string
        monitored:
          type: boolean
        monitored_attestation:
          type: string
        name:
          type: string
        operator:
          type: string
        operator_display_value:
          type: string
        overridden:
          type: boolean
        overridden_value:
          type: string
        recommended_value:
          type: string
        remediation_enabled:
          type: boolean
        remediation_steps:
          type: string
        status:
          type: string
        subcategory:
          type: string
        tenant:
          type: string
        tickets:
          items:
            $ref: '#/components/schemas/Ticket'
          type: array
      type: object
    ConfigValue:
      properties:
        choices:
          type: string
        default_value:
          type: string
        type:
          type: string
      type: object
    FeatureState:
      properties:
        last_scanned_at:
          format: date-time
          type: string
        status:
          enum:
          - UNKNOWN
          - OK
          - UNHEALTHY
          - AUTH_REQUIRED
          - SCANNING
          type: string
        status_details:
          type: string
        updated_at:
          format: date-time
          type: string
      type: object
    JiraIdentity:
      properties:
        accountId:
          type: string
        displayName:
          type: string
      type: object
    JiraIssueFields:
      properties:
        assignee:
          $ref: '#/components/schemas/JiraIdentity'
        reporter:
          $ref: '#/components/schemas/JiraIdentity'
        status:
          $ref: '#/components/schemas/Status'
      type: object
    JiraIssueResponse:
      properties:
        fields:
          $ref: '#/components/schemas/JiraIssueFields'
      type: object
    JiraIssueType:
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    JiraProjectDetailResponse:
      properties:
        issueTypes:
          items:
            $ref: '#/components/schemas/JiraIssueType'
          type: array
      type: object
    RemediationConfig:
      properties:
        auto_fix:
          type: boolean
        guide_footer:
          type: string
        guide_header:
          type: string
        guide_steps:
          items:
            type: string
          type: array
        remediation_value:
          type: string
      type: object
    ScopeConfig:
      properties:
        description:
          type: string
        enabled:
          type: boolean
        id:
          type: string
        name:
          type: string
        native_name:
          type: string
        severity:
          type: string
      type: object
    SsoFields:
      properties:
        fields:
          items:
            $ref: '#/components/schemas/AuthFormElement'
          type: array
        sso_provider:
          enum:
          - NONE
          - OKTA
          - AZURE
          - GOOGLE
          type: string
      required:
      - fields
      - sso_provider
      type: object
    Status:
      properties:
        name:
          type: string
      type: object
    Ticket:
      properties:
        createdAt:
          format: date-time
          type: string
        integrationId:
          type: string
        summary:
          type: string
        tenant:
          type: string
        ticketKey:
          type: string
        ticketUrl:
          type: string
        type:
          enum:
          - JIRA_TICKETING
          - SNOW_TICKETING
          type: string
      type: object
    User:
      properties:
        email:
          type: string
        full_name:
          type: string
        user_id:
          type: string
      required:
      - email
      - full_name
      - user_id
      type: object
  securitySchemes:
    Bearer:
      scheme: bearer
      type: http
info:
  contact:
    email: support@paloaltonetworks.com
  description: "This Open API spec file represents the APIs available for\n[Palo Alto\
    \ Networks SSPM](https://docs.paloaltonetworks.com/NEED-URL) APIs. \n??? Add description\
    \ ???\nThese APIs use the common SASE authentication mechanism and base URL. See\
    \ the\n[Prisma SASE API Get Started](https://pan.dev/sase/docs/getstarted) guide\
    \ for more information.\n\nThis Open API spec file was created on December 16,\
    \ 2024. To check for a more recent version of this file, see\n[Interconnect APIs\
    \ on pan.dev](https://pan.dev/sase/api/mt-sp-interconnect/mt-interconnect-api.html).\
    \ ??? Add respective URL ???\n\n\xA9 2024 Palo Alto Networks, Inc. Palo Alto Networks\
    \ is a registered trademark of Palo\nAlto Networks. A list of our trademarks can\
    \ be found at\n\n[https://www.paloaltonetworks.com/company/trademarks.html](https://www.paloaltonetworks.com/company/trademarks.html)\n\
    \nAll other marks mentioned herein may be trademarks of their respective companies.\n"
  title: SaaS Security Posture Management APIs
  version: '1.0'
openapi: 3.0.1
paths:
  /sspm/api/v1/apps:
    get:
      description: 'You can use this API to get the list of onboarded SaaS applications.

        '
      operationId: get-sspm-api-v1-apps
      parameters:
      - description: List of filters
        example: filter=type:office365
        in: query
        name: filter
        schema:
          type: string
      - description: 'defines sorting of the result.Format: FIELD_NAME:DIRECTION|FIELD_NAME:DIRECTION|...
          .'
        example: order_by=name:asc|type:desc
        in: query
        name: order_by
        schema:
          type: string
      - description: applies page_token to get requested page of items
        example: page_token=MSM2Iw==
        in: query
        name: page_token
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationPage'
          description: successful operation
      security:
      - Bearer: []
      summary: Get registered application
      tags:
      - Registered Application
  /sspm/api/v1/apps/{app_id}:
    get:
      description: 'You can use this API to get the basic details of the application
        by providing app ID and tenant name.

        '
      operationId: get-sspm-api-v1-apps-app_id
      parameters:
      - description: application id
        example: f1700e7b-e60f-4d5e-bfce-aba3543adf8e
        in: path
        name: app_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: successful operation
        '404':
          description: not registered application
      security:
      - Bearer: []
      summary: Application details
      tags:
      - Registered Application
  /sspm/api/v1/apps/{app_id}/configs:
    get:
      description: 'You can use this API to get details on the application configuration
        by providing app ID and tenant name.

        '
      operationId: get-sspm-api-v1-apps-app_id-configs
      parameters:
      - description: application id
        example: f1700e7b-e60f-4d5e-bfce-aba3543adf8e
        in: path
        name: app_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Config'
                type: array
          description: successful operation
        '404':
          description: not registered application
      security:
      - Bearer: []
      summary: Application configuration details
      tags:
      - Registered Application
  /sspm/api/v1/apps/{app_id}/settings:
    get:
      description: "You can use this API to get the details on the settings of the\
        \ SaaS application by providing app ID and tenant name. \n"
      operationId: get-sspm-api-v1-apps-app_id-settings
      parameters:
      - description: application id
        example: f1700e7b-e60f-4d5e-bfce-aba3543adf8e
        in: path
        name: app_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Config'
                type: array
          description: successful operation
        '404':
          description: not registered application
      security:
      - Bearer: []
      summary: Application settings details
      tags:
      - Registered Application
  /sspm/api/v1/auth/{app}/info:
    get:
      description: 'You can use this API to get details on the application authorization
        in the catalog.

        '
      operationId: get-sspm-api-v1-auth-app-info
      parameters:
      - description: application type
        example: office365
        in: path
        name: app
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationAuthInfo'
          description: successful operation
        '404':
          description: not registered application
      security:
      - Bearer: []
      summary: Authorization information
      tags:
      - Information
  /sspm/api/v1/catalog/apps:
    get:
      description: "You can use this API to get details on all the supported SSPM\
        \ applications. \n"
      operationId: get-sspm-api-v1-catalog-apps
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogApplication'
          description: successful operation
      security:
      - Bearer: []
      summary: Catalog of supported SSPM apps
      tags:
      - Catalog Information
  /sspm/api/v1/catalog/apps/{app}:
    get:
      description: "You can use this API to get details on the catalog settings for\
        \ the application by providing application type.  \n"
      operationId: get-sspm-api-v1-catalog-apps-app
      parameters:
      - description: application name
        example: servicenow
        in: path
        name: app
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogApplication'
          description: successful operation
      security:
      - Bearer: []
      summary: Catalog setting details
      tags:
      - Catalog Information
  /sspm/api/v1/catalog/apps/{app}/configs:
    get:
      description: 'You can use this API to get details on the catalog configuration
        settings by providing application type.

        '
      operationId: get-sspm-api-v1-catalog-apps-app-configs
      parameters:
      - description: application name
        example: servicenow
        in: path
        name: app
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CatalogConfig'
                type: array
          description: successful operation
      security:
      - Bearer: []
      summary: Catalog configuration settings details
      tags:
      - Catalog Information
  /sspm/api/v1/catalog/apps/{app}/scopes:
    get:
      description: "??? Add description ??? \n"
      operationId: get-sspm-api-v1-catalog-apps-app-scopes
      parameters:
      - description: application name
        example: servicenow
        in: path
        name: app
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScopeConfig'
                type: array
          description: successful operation
      security:
      - Bearer: []
      summary: Fetch plugin scope catalog for for given app by app_type
      tags:
      - Catalog Information
  /sspm/api/v1/catalog/controls/{common_control_id}:
    get:
      description: "??? Add description ??? \n"
      operationId: get-sspm-api-v1-catalog-controls-common_control_id
      parameters:
      - description: common control id
        example: PAN-00000001
        in: path
        name: common_control_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonControlProfiles'
          description: successful operation
      security:
      - Bearer: []
      summary: compliance profile mappings for given common control
      tags:
      - Catalog Information
  /sspm/api/v1/integration/integrations/{integration_id}/{integration_type}/issue/{key}:
    get:
      description: "??? Add description ??? \n"
      operationId: get-sspm-api-v1-integration-integrations-integration_id-integration_type-issue-key
      parameters:
      - description: integration id
        example: 65dcec42a2f1d37173e6294c
        in: path
        name: integration_id
        required: true
        schema:
          type: string
      - description: integration type
        example: JIRA_TICKETING
        in: path
        name: integration_type
        required: true
        schema:
          type: string
      - description: issue key
        example: '10001'
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JiraIssueResponse'
          description: successful operation
        '404':
          description: not registered jira-ticketing integration
      security:
      - Bearer: []
      summary: Fetch onboarded JIRA ticketing issue details by key
      tags:
      - JIRA Issue
  /sspm/api/v1/integration/integrations/{integration_id}/{integration_type}/project/{key}:
    get:
      description: "??? Add description ??? \n"
      operationId: get-sspm-api-v1-integration-integrations-integration_id-integration_type-project-key
      parameters:
      - description: integration id
        example: 65dcec42a2f1d37173e6294c
        in: path
        name: integration_id
        required: true
        schema:
          type: string
      - description: integration type
        example: JIRA_TICKETING
        in: path
        name: integration_type
        required: true
        schema:
          type: string
      - description: project key
        example: TestProject
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JiraProjectDetailResponse'
          description: successful operation
        '404':
          description: not registered jira-ticketing integration
      security:
      - Bearer: []
      summary: Fetch onboarded JIRA ticketing project details by key
      tags:
      - JIRA Issue
  /sspm/api/v1/integration/integrations/{integration_id}/{integration_type}/projects:
    get:
      description: "??? Add description ??? \n"
      operationId: get-sspm-api-v1-integration-integrations-integration_id-integration_type-projects
      parameters:
      - description: integration id
        example: 65dcec42a2f1d37173e6294c
        in: path
        name: integration_id
        required: true
        schema:
          type: string
      - description: integration type
        example: JIRA_TICKETING
        in: path
        name: integration_type
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: successful operation
        '404':
          description: not registered jira-ticketing integration
      security:
      - Bearer: []
      summary: Fetch onboarded JIRA ticketing project list
      tags:
      - JIRA Issue
servers:
- url: https://api.sase.paloaltonetworks.com
tags:
- description: '??? Add description ???

    '
  name: Registered Application
- description: '??? Add description ???

    '
  name: Information
- description: '??? Add description ???

    '
  name: Catalog Information
- description: 'Get JIRA issue details.

    '
  name: JIRA Issue
